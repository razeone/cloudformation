{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based on the region in which the stack is run. This example creates an EC2 security group for the instance to give you SSH access. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",
    "Parameters": {
      "KeyName": {
        "Description": "Name of an existing Key Pair to enable SSH Access to the instance",
        "Type": "AWS::EC2::KeyPair::KeyName",
        "ConstraintDescription": "Must be the name of an existing key pair name"
      },
      "LatestAmiId": {
          "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
          "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
      }
    },
    "Resources": {
      "EC2Instance": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "InstanceType": "t2.micro",
          "SecurityGroups": [
            {
              "Ref": "InstanceSecurityGroup"
            }
          ],
          "KeyName": {
            "Ref": "KeyName"
          },
          "ImageId": {
              "Ref": "LatestAmiId"
          },
          "UserData": {
              "Fn::Base64": { "Fn::Join": ["",[
                  "#!/bin/bash -xe\n",
                  "sudo yum -y update \n",
                  "sudo amazon-linux-extras install -y lamp-mariadb10.2-php7.2 php7.2\n",
                  "sudo yum install -y httpd mariadb-server\n",
                  "sudo systemctl start httpd\n",
                  "sudo systemctl enable httpd\n",
                  "sudo usermod -a -G apache ec2-user\n",
                  "sudo chown -R ec2-user:apache /var/www\n",
                  "echo '<?php phpinfo(); ?>' > /var/www/html/phpinfo.php\n"
              ]]}
          }
        }
      },
      "InstanceSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Enable HTTP access to everyone",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": "80",
              "ToPort": "80",
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      }
    }
  }