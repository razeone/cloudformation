{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation Sample Template EC2InstanceWithSecurityGroupSample: Create an Amazon EC2 instance running the Amazon Linux AMI. The AMI is chosen based on the region in which the stack is run. This example creates an EC2 security group for the instance to give you SSH access. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing Key Pair to enable SSH HTTP Access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of an existing key pair name"
    },
    "AmiId": {
      "Default": "ami-07ebfd5b3428b6f4d",
      "Type": "String"
    },
    "InstanceType": {
      "ConstraintDescription": "Must a valid EC2 type, default t2-micro",
      "Default": "t2.micro",
      "Description": "Select an instance type",
      "Type": "String",
      "AllowedValues": [
        "t2.nano",
        "t2.micro",
        "t2.small",
        "m4.medium",
        "m5.large"
      ]
    }
  },
  "Resources": {
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "SecurityGroups": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Ref": "AmiId"
        },
        "UserData": {
            "Fn::Base64": { "Fn::Join": ["",[
                "#!/bin/bash -xe\n",
                "sudo apt-get update -y\n",
                "sudo apt-get install apache2 -y\n",
                "sudo apt-get install mariadb-server mariadb-client -y\n",
                "sudo apt install php libapache2-mod-php php-common php-mbstring php-xmlrpc php-soap php-gd php-xml php-intl php-mysql php-cli php-zip php-curl -y\n",
                "sudo systemctl start mysql.service && sudo systemctl enable mysql.service\n",
                "sudo systemctl start apache2.service && sudo systemctl enable apache2.service\n",
                "echo '<?php phpinfo(); ?>' > /var/www/html/phpinfo.php\n"
            ]]}
        }
      }
    },
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP and SSH access to everyone, this is only for tests purposes, DO NOT USE IN PRODICTION!",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    }
  }
}